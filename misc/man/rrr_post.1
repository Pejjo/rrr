.Dd 2020-01-16
.TH RRR_POST 1
.SH NAME
Read Route Record is a dynamic module-based message handling program
for collecting, buffering, processing and storing messages and measurements.
.PP
.B rrr_post
parses input from a file or standard input and connects to a UNIX socket created by the main
.B rrr
program to post data to its modules.
.SH SYNOPSIS
.B rrr_post {RRR SOCKET}
.Dl [-f|--file[=]FILENAME|-]
.Dl [-r|--readings[=]reading1,reading2,...]
.Dl [-a|--array_definition[=]ARRAY DEFINITION]
.Dl [-c|--count[=]MAX FILE RECORDS]
.Dl [-t|--topic[=]MQTT TOPIC]
.Dl [-d|--debuglevel[=]FLAGS]
.Dl [-D|--debuglevel_on_exit[=]FLAGS]
.Dl [-h|--help]
.Dl [-v|--version]

.SH DESCRIPTION
This program requires
.Xr rrr(1)
to be running and listening on a UNIX socket with its
.B socket
module. Refer to
.Xr rrr.conf(5)
and
.Xr rrr(1)
on how to set this up.
.B rrr_post
will parse input records in a chosen format and convert them to RRR array messages before sending them on the socket. An input data
record may contain an arbitary number of data fields of different types (strings, numbers etc.).
.PP
.SH OPTIONS
.IP -f|--file[=]FILENAME|-
Read records from a file or standard input (-). The format of the input data must be specified with the
.B -a
option. If left unspecified, no file or standard input reading is performed.
.IP -r|--readings[=]reading1,reading2,...
Generate simple RRR messages, one for each reading specified. The reading value is an unsigned integer stored as 64 bits. If specified, the
reading messages are generated before any reading of a file or standard input begins.
.IP -a|--array_definition[=]DEFINITION
Format of the input data for file or standard input, see the
.B ARRAY DEFINITION
section.
.IP -c|--count[=]RECORDS
Stop reading file or standard input after this many records have been read.
.IP -t|--topic[=]MQTT-TOPIC
Set an MQTT topic in the messages generated.
.IP -d|--debuglevel[=]FLAGS
Debuglevel to use.
.IP -D|--debuglevel_on_exit[=]FLAGS
Debuglevel to use when program exits.

.PP
.SH ARRAY DEFINITION
A range of data types may be used in the data records given to
.B rrr_post
. A record consists of one or more import items of different types.
Some types are of fixed length, and others require delimeters. An array definition describes the data to expect 
in each record.
.PP
The specified definition is checked when the program starts
to make sure its always possible to figure out the lenght of each received record from the data it contains. For instance, a
record cannot end with a number given as ASCII string as it's not possible to determin when it ends. Such types must be followed
by a separator type.
.PP
Sequential fixed length values of the same type may be grouped together in a single items, and each item may be tagged to
ease the extraction of data in later processing.
.SS SYNTAX
type1[length1][s|u|][@count1][#tag1][,type2[length2][s|u|][@count2][#tag2]][,...]
.PP
.Bl -tag -width -indent
.It type
Identifier name of the type
.It length
Length in bytes of the type (if required)
.It count
Item count of the sepcific type, defaults to 1 if not specified
.It tag
Optional custom identifier tag of the type
.El
.SS FIXED LENGTH TYPES
These types require the
.I length
field to be specified.
.PP
.Bl -tag -width -indent
.It be
Unsigned number in big endian binary format. Length must be in the range 1-8.
.It le
Unsigned number in little endian binary format. Length must be in the range 1-8.
.It h
Unsigned number in the endianess of the machine. Might be unsafe for network transfer. Length must be in the range 1-8.
.It blob
Arbitary binary data. Lengt must be in the range 1-1024.
.It sep
One or more separator characters. Matches ! " # $ % & ' ( ) * + , - . / : ; < = > ? @ [ \ ] ^ _ ` { | } ~ LF CR TAB and SPACE. Length
must be in the range 1-64.
.El
.PP
Types
.B be, le
and
.B h
may be followed by an
.B s
after the length specifier to indicate that the input number is signed. If instead
.B u
or nothing is set here, the value is treated as unsigned. No other types may have sign flag set.
.SS WEAK DYNAMIC LENGTH TYPES
The length of these types are identified automatically and must not have length set. They cannot be at the end of a definition.
.PP
.Bl -tag -width -indent
.It ustr
An unsigned integer encoded with ASCII characters 0-9. Stored with 64-bits.
.It istr
A signed integer encoded with ASCII characters 0-9 optionally preceeded by - or +. Stored with 64-bits.
.It fixp
The RRR fixed decimal type encoded with ASCII characters 0-9 (and A-F). May include a single dot . to separate integer from fraction,
and the integer part may be preceded with a sign (- or +). Stored with 64-bits where 1 bit is the sign, 39 bits is the integer and
24 bits are the fraction. May be preceeded with 10# or 16# to indicate use of base 10 or base 16 conversion, default is base 10. 
.El
.SS STRONG DYNAMIC LENGTH TYPES
The length of these types are identified automatically and must not have length set. They may be at the end of a definition.
.PP
.Bl -tag -width -indent
.It msg
A full RRR message complete with headers and checksums.
.It str
An arbitary length string of characters beginning and ending with double quotes ". Double quotes inside the string must be escaped with \\. The
surrounding quotes are not included in the final string.
.El

.SH RETURN VALUE
.B rrr_post
returns 0 on success and 1 on failure.

.SH DEBUG FLAGS
Refer to
.Xr rrr(1)
for possible debug flags.

.SH SEE ALSO
.Xr rrr(1),
.Xr rrr.conf(5)