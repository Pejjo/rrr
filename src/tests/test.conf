# We inject a packet into udp, parse it, and let instance_buffer read it. We
# extract the message to verify it and then inject it again into a buffer which 
# ipclient reads from. We send it through the network stack to ipserver and then
#  mysql inserts the data. Mysql produces an ACK which is sent back over network
# and we pick it up from another buffer to verify that the message was written.

# ENTRY POINTS
[instance_udp]
module=udp
udp_input_types=be4#be4,be3#be3,be2s#be2s,be1u#be1u,sep1#sep1,le4#le4,le3#le3,le2s#le2s,le1u#le1u,sep2#sep2,blob8@2#blob8,msg#msg
udp_port=2222

[instance_udp_3]
module=udp
senders=instance_udp
udp_target_port=2223
udp_target_host=localhost
udp_send_rrr_message=yes

[instance_udp_4]
module=udp
udp_input_types=msg
udp_port=2223
udp_extract_rrr_messages=yes

[instance_duplicator]
module=duplicator
senders=instance_udp_4

[instance_socket]
module=socket
socket_default_topic=socket/topic/a/b/c
socket_input_types=be4#int1,be3#int2,be2s#int3,be1#int4,sep1@1,le4@1#aaa,le3#bbb,le2s@1#ccc,le1#ddd,sep2#sep2,blob8@2#blob,msg#msg
socket_path=/tmp/rrr_test.sock

[instance_socket_duplicator]
module=duplicator
senders=instance_socket

[instance_dummy_input]
module=dummy

# PROCESSING

[instance_mqtt_broker]
module=mqttbroker

[instance_mqtt_client_publish_raw]
module=mqttclient
senders=instance_duplicator
mqtt_server=localhost
mqtt_publish_topic=x/y/z
mqtt_publish_array_values=be4,be3,be2s,be1u,sep1,le4,le3,le2s,le1u,sep2,blob8,msg

[instance_mqtt_subscribe_raw]
module=mqttclient
mqtt_server=localhost
mqtt_subscribe_topics=x/y/z
mqtt_receive_array=be8,be8,be8s,be8,sep1,be8,be8,be8s,be8,sep2,blob8@2,msg

[instance_perl5]
module=perl5
senders=instance_socket_duplicator
perl5_file=test.pl
perl5_config_sub=config
perl5_process_sub=process

[instance_mqtt_client_publish_5]
module=mqttclient
senders=instance_socket_duplicator
mqtt_server=localhost
mqtt_publish_rrr_message=yes
mqtt_version=5

[instance_mqtt_client_subscribe_5]
module=mqttclient
mqtt_server=localhost
mqtt_version=5
mqtt_subscribe_topics=+/+/a/+/#
mqtt_client_debug_unsubscribe_cycle=yes

[instance_mqtt_client_publish_3]
module=mqttclient
senders=instance_mqtt_client_subscribe_5
mqtt_server=localhost
mqtt_version=3.1.1
mqtt_publish_rrr_message=yes
mqtt_publish_topic=d/e/f
mqtt_publish_topic_force=yes
mqtt_qos=2

[instance_mqtt_client_subscribe_3]
module=mqttclient
mqtt_server=localhost
mqtt_version=3.1.1
mqtt_receive_rrr_message=yes
mqtt_subscribe_topics=+/e/#
mqtt_qos=0
mqtt_client_debug_unsubscribe_cycle=yes

[instance_ipclient_ipserver]
module=ipclient
senders=instance_mqtt_client_subscribe_3
ipclient_client_number=1
ipclient_default_remote=localhost
ipclient_default_remote_port=5555
ipclient_src_port=4444
ipclient_listen=yes

# Receives row to insert into MySQL
[instance_ipserver]
module=ipclient
ipclient_client_number=2
ipclient_src_port=5555
ipclient_listen=yes

# Sends the TAG message from MySQL back
[instance_ipclient]
module=ipclient
senders=instance_mysql
ipclient_client_number=3
ipclient_default_remote=localhost
ipclient_default_remote_port=4444
ipclient_src_port=6666

[instance_mysql]
module=mysql
senders=instance_ipserver
mysql_server=localhost
mysql_colplan=array
mysql_user=rrr-testing
mysql_password=cnw97zvewQcj812K
mysql_db=rrr-testing
mysql_table=rrr-test-array-types-2
#mysql_columns=int1,int2,int3,int4,int5,int6,int7,int8,blob_combined,rrr_message
# Note that it is possible to store the same array value into multiple columns, like with int1 here
mysql_column_tags=int1->int1,int2,int3,int4,int1->int5,bbb->int6,ccc->int7,ddd->int8,blob->blob_combined,msg->rrr_message
mysql_add_timestamp_col=yes
mysql_drop_unknown_messages=yes
mysql_strip_array_separators=yes
mysql_generate_tag_messages=yes

[instance_python3]
module=python3
senders=instance_duplicator
python3_module=testing
python3_process_function=process
python3_config_function=config
python3_source_function=source
python3_persistent_setting_a=touched
python3_persistent_setting_b=touched

[instance_test_module]
module=test_module

# EXIT POINTS

[instance_buffer_from_perl5]
module=buffer
senders=instance_perl5

[instance_buffer_from_python3]
module=buffer
senders=instance_python3

[instance_buffer_msg]
module=buffer
senders=instance_ipclient_ipserver

[instance_buffer_from_mqtt_raw]
module=buffer
senders=instance_mqtt_subscribe_raw
